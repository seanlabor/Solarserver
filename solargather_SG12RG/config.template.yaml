inverter:
  host: 192.168.178.59                 # [Required] IP Address of the Inverter or Dongle
  # port: 502                               # [Optional] Default for modbus is 502, for http is 8082
  # timeout: 10                             # [Optional] Default is 10, how long to wait for a connection
  # retries: 3                              # [Optional] Default is 3, how many times to retry if connection fails
  # slave: 0x01                             # [Optional] Default is 0x01
  # scan_interval: 30                       # [Optional] Default is 30
  connection: modbus                        # [Required] options: modbus, sungrow, http
  #model: "SG12.0RT"                      # [Optional] This is autodetected on startup, only needed if detection issues or for testing
                                            # See model list here: https://github.com/bohdan-s/SunGather#supported
  # serial: xxxxxxxxxx                      # [Optional] This is autodetected on startup, only needed if detection issues or for testing, used as a unique ID
  smart_meter: False                       # [Optional] Default is False, Set to true if inverter supports reading grind / house consumption
  # use_local_time: False                   # [Optional] Default False, Uses Inventer time, if true it uses PC time when updating timestamps (e.g. PVOutput)
  # log_console: INFO                       # [Optional] Default is WARNING, Options: DEBUG, INFO, WARNING, ERROR
  # log_file: DEBUG                         # [Optional] Default is OFF, Options: OFF, DEBUG, INFO, WARNING, ERROR
  # level: 1                                # [Optional] Set the amount of information to gather
                                            # 0 = Model and Solar Generation, 
                                            # 1 (default) = Useful data, all required for exports, 
                                            # 2 everything your Inverter supports, 
                                            # 3 Everything from every register 

# If you do not want to use a export, you can either remove the whole configuration block
# or set enabled: False
exports:
  # Print Registers to console, good for debugging / troubleshooting
  - name: console         
    enabled: True                          # [Optional] Default is False

  # Runs a simple Webserver showing Config and last read registers
  # Access at http://localhost:8080 or http://[serverip]:8080
  - name: webserver 
    enabled: True                           # [Optional] Default is False
    # port: 8080                            # [Optional] Default is 8080


  # Output data to InfluxDB
  - name: influxdb
    enabled: True                          # [Optional] Default is False
    url: ${INFLUX_DB_URL}           # [Optional] Default URL is http://localhost:8086
    token: ${INFLUXDB_INIT_TOKEN}                            # [Required] API Token OR Username:Password (for influxdb v1.8x comment it out and use username + password)
    # username:  ${INFLUXDB_INIT_USERNAME}                         # [Optional] Username if not using token
    # password:   ${INFLUXDB_INIT_PASSWORD}                          # [Optional] Password if not using token
    org: ${INFLUXDB_ORG}                          # [Required] InfluxDB Organization (for influxdb v1.8x this will be ignored)
    bucket: ${INFLUXDB_BUCKET_SG12RG}                      # [Required] InfluxDB Bucket (for influxdb v1.8x this is the database name)
    measurements:                           # [Required] Registers to publish to bucket
      - point: "power"
        register: daily_power_yields
      - point: "power"
        register: total_active_power
      - point: "power"
        register: export_to_grid
      - point: "power"
        register: import_from_grid
      - point: "temp"
        register: internal_temperature

  # Publish Registers to MQTT / Home Assistant
  - name: mqtt
    enabled: True                          # [Optional] Default is False
    host: ${VM_HOST_IP}                   # [Required] IP or Hostname of MQTT Server 
    # port: 1883                            # [Optional] Default 1883
    topic: "SunGather/SG12"       # [Optional] Default: "SunGather/{serial_number}"
    username: ${MQTT_USERNAME}                 # [Optional] Username is MQTT server requires it
    password: ${MQTT_PASSWORD}                # [Optional] Password is MQTT server requires it
    # client_id:                            # [Optional] Client id for mqtt connection. Defaults to Serial Number.
    homeassistant: True
    ha_sensors:
      - name: "Active Generation"
        sensor_type: sensor
        register: total_active_power
        dev_class: power
        state_class: measurement
      - name: "Daily Generation"
        sensor_type: sensor
        register: daily_power_yields
        device_class: energy
        state_class: total_increasing
        icon: "mdi:solar-power"
      - name: "Monthly Generation"
        sensor_type: sensor
        register: monthly_power_yields
        device_class: energy
        state_class: total_increasing
        icon: "mdi:solar-power"
      - name: "Total Generation"
        sensor_type: sensor
        register: total_power_yields
        device_class: energy
        state_class: total_increasing
        icon: "mdi:solar-power"
      - name: "Temperature"
        sensor_type: sensor
        register: internal_temperature
        device_class: temperature
        state_class: measurement
      - name: "Power State"
        sensor_type: binary_sensor
        register: run_state
        device_class: running
        payload_on: "ON"
        payload_off: "OFF"